/**
 * code generated by CPHelper
 * @author dwij
 */


#include <bits/stdc++.h>


using namespace std;

/*******  All Required define Pre-Processors and typedef Constants *******/
#define endl '\n'
typedef long long ll;

/**********************************************/



//int testNumber = 0;
void CAlternatingSubsequence(std::istream &in, std::ostream &out) {
    //out << "Case #" << ++testNumber << ": ";
    int T;
    in >> T;
    while (T--) {
        long n;
        in >> n;
        ll arr[n];
        for (int i = 0; i < n; ++i) {
            in >> arr[i];
        }

        vector<vector<ll>> v;
        vector<ll> tmp;

        tmp.push_back(arr[0]);
        for (int j = 1; j < n; ++j) {
            if (arr[j - 1] * arr[j] < 0) {
                v.push_back(tmp);
                tmp.clear();
            }

            tmp.push_back(arr[j]);
        }

        v.push_back(tmp);

        vector<ll> mm;
        for (auto &vv : v) {
            ll max = -1e9 - 1;
            for (auto s : vv) {
                max = fmax(max, (ll) s);
            }

            mm.push_back(max);
        }

        ll sum = 0;
        for (int k = 0; k < mm.size(); ++k) {
            sum += mm[k];
        }


        out << sum << endl;


    }

}


int main() {
    std::istream &in(std::cin);
    std::ostream &out(std::cout);

    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    CAlternatingSubsequence(in, out);
    return 0;
}
